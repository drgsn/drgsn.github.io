[{"content":"I\u0026rsquo;ve decided to start a blog and what better hello world post than how I\u0026rsquo;ve set it up. But first lets talk about what is Hugo.\nWhat is Hugo?  2560px-Logo_of_Hugo_the_static_website_generator.svg.png \nAccording to their site Hugo is a fast and modern static site generator written in Go, and designed to make website creation fun again.\nPut it in layman terms Hugo is a tool that generates a full static HTML website based on raw data and a set of templates. Essentially, Hugo automates the task of coding individual HTML pages and gets those pages ready to serve to users ahead of time. The nice thing about Hugo is that even though is written in go, you don\u0026rsquo;t need to have go installed on your machine.\nThe raw data is the content you write in Markdown, a format that widely used in lots of editors.\nThe template is the theme that you chose for your site.\nMy process for writing a blog post is:\n write a post using VSCode. I have install the Markdown Editor to make it easier to arrange the post and preview it, but lately I started using it less and less.  When I\u0026rsquo;m on the move and don\u0026rsquo;t have access to my PC, I use VSCode from GitPod.   then commit the post to the GitHub repository using GitHub Actions, deploy the post to a separate repository created for GitHub Pages.  Install Hugo The first think we need to do is to install the Hugo CLI, to be able to test locally our changes before pushing them to Github. Depending on your operating system you need to do the following:\nMac OS: If you use Homebrew, run the brew install command in your terminal to install Hugo:\nbrew install hugo or if you use MacPorts run the following command:\nport install hugo To validate the installation run:\nhugo version Windows: There are 2 methods of installing Hugo on windows:\nMethod 1 - Using Chocolatey: choco install hugo --confirm # Or if you need the “extended” Sass/SCSS version: choco install hugo-extended -confirm Method 2 - Manual Installation The Hugo GitHub repository contains pre-built versions of the Hugo command-line tool for various operating systems, which can be found on the Releases page.\nFor more instruction on installing these releases, refer to Hugo\u0026rsquo;s install guide.\nLinux Based on your operating system you can use one of the following commands:\n# Debian / Ubuntu sudo apt-get install hugo # Arch / Manjaro sudo pacman -Syu hugo # Fedora, Red Hat and CentOS sudo dnf install hugo For other distributions or operating systems visit the Hugo\u0026rsquo;s install guide.\nCreate a Hugo site  If you don\u0026rsquo;t have any knowledge of git, before you continue take a look at the Git Handbook and the GitHub Guides Page If you want to have an in depth knowledge of Git read the Git Book\n Now that you have Hugo install is time to create your own site and run it locally:\n# create site hugo new site myblog-name # move into newly created site cd myblog-name # start the hugo server. The server will point to http://localhost:1313/ # the -D option will include content marked as draft. More info at https://gohugo.io/commands/hugo_server/ hugo server -D Now that the site is created, comes the hardest part. Picking up a theme. This is the steps were I\u0026rsquo;ve spend the most time on and probably the part of my blog where I tinker the most until now. At the time of the writting I\u0026rsquo;m using Hugo Theme Stack. My recommendation is that if you are using Git to manage your Hugo site, add the themes as a submodule.\n# git submodule add repo-url git submodule add https://github.com/CaiJimmy/hugo-theme-stack/ themes/hugo-theme-stack If it\u0026rsquo;s your first time using this theme, take a look at exampleSite folder, which includes an example config.yaml with all available parameters.\n If you plan to test out multiple themes, remember to backup your config file so you can easily come back to a previous version, or create a branch for each theme that you test out. This way when you find the one it\u0026rsquo;s easy to switch to it and start working.\n My config file is:\nbaseurl:https://drgos.comlanguageCode:en-ustheme:hugo-theme-stackpaginate:10title:DrGos# Theme i18n support# Available values: en, fr, id, ja, ko, pt-br, zh-cn, es, de, nl, itDefaultContentLanguage:enpermalinks:post:/p/:slug/page:/:slug/params:mainSections:- postfeaturedImageField:imagerssFullContent:truefavicon:footer:since:2021customText:If you want to collaborate, just reach out!dateFormat:published:Jan 02, 2006lastUpdated:Jan 02, 2006 15:04 MSTsidebar:emoji:☕subtitle:Hi, my name is Dragos and I\u0026#39;m a full stack engineer.avatar:enabled:truelocal:falsesrc:https://drgos.com/images/profile.pngarticle:math:falsetoc:truereadingTime:truelicense:enabled:truedefault:Licensed under CC BY-NC-SA 4.0comments:enabled:trueprovider:utterances# disqusutterances:repo:# blog public repoissueTerm:pathnamelabel:Commentwidgets:enabled:- search- archives- tag-cloudarchives:limit:5tagCloud:limit:5colorScheme:# Display toggletoggle:true# Available values: auto, light, darkdefault:autoimageProcessing:cover:enabled:truecontent:enabled:true### Custom menu### See https://docs.stack.jimmycai.com/configuration/custom-menu.html### To remove about, archive and search page menu item, remove `menu` field from their FrontMattermenu:main:- identifier:homename:Homeurl:/weight:-100pre:homeparams:### For demonstration purpose, the home link will be open in a new tabnewTab:falserelated:includeNewer:truethreshold:60toLower:falseindices:- name:tagsweight:100- name:categoriesweight:200markup:goldmark:renderer:## Set to true if you have HTML content inside Markdownunsafe:falsetableOfContents:endLevel:4ordered:truestartLevel:2highlight:noClasses:falseNow that you have your site set up, you can visit https://localhost:1313 to see how it looks\nCreating a new post Create a new post to give your Hugo site some initial content. Run the hugo new command in your terminal to generate a new post:\nhugo new posts/hello-world.md Inside of hello-world.md, add some initial content. Remove the draft line in your post\u0026rsquo;s frontmatter when you are happy with it and want your post to be published. Any posts with draft: true set will be skipped by Hugo\u0026rsquo;s build process. If you test locally remember the -D option so that you draft is build.\nDeploy to GitHub Pages We will commit our posts to a private repository and we will publish them using GitHub Actions.\nThe first thing that we need to do is to create 2 GitHub repositories (one public one and one private one) by visiting repo.new.\nThe private one you can name it whatever you want, but the public one needs to be named \u0026lt;USERNAME\u0026gt;.github.io. or the name of your site. The repositories can be empty, you don\u0026rsquo;t need README.md .gitignore or any other file.\nOnce you have the repositories ready, we need to point the Hugo site to the private repo.\nRun the following commands in your site folder:\ngit init git add . git remote add origin replace_with_url_of_private_repo git commit -m “first commit” git push origin master After successfully committed, visit your private repository, you should see everything that was in your site folder. If everything looks as expected, it time to set up GitHub Actions to publish you site to the public repository.\nSetup GitHub Actions to publish changes Once we have the repositories ready, it\u0026rsquo;s time to setup the GitHub Actions. This can easily be done by adding a deploy.yaml in your_site/.github/workflows\nmkdir -p .github/workflows # -p will create any parent directories if needed. touch deploy.yaml Open the deploy.yaml file in your favorite editor and paste:\nname:hugo publishon:push:branches:- master# deploy the site when there is a push to master branch.jobs:build-deploy:runs-on:ubuntu-20.04steps:- name:git checkout uses:actions/checkout@v2#with:# submodules: true # Fetch Hugo themes (true OR recursive)# fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod- name:update themesrun:git submodule update --init --recursive- name:Setup Hugouses:peaceiris/actions-hugo@v2with:hugo-version:\u0026#39;latest\u0026#39;extended:true- name:Buildrun:hugo --minify- name:Deployuses:peaceiris/actions-gh-pages@v3with:personal_token:${{ secrets.GH_TOKEN }}external_repository:\u0026lt;username\u0026gt;/\u0026lt;public_repository_name\u0026gt;#public repositorypublish_dir:./publicuser_name:# your github user_nameuser_email:# your github emailpublish_branch: master # default:gh-pagesNow you need to commit and push your newly created action:\ngit add . git commit -m \u0026#34;added github action\u0026#34; git push After the action finishes running, you should see your site in your public repo. If you visit \u0026lt;USERNAME\u0026gt;.github.io/\u0026lt;public_repo_name\u0026gt; then your site should load.\nWe are getting close, but lets take it a step further and have a custom domain, and not a github.io one. In order to achive this we have only a couple of steps left to do.\n  Make sure that you have a domain name You can buy a domain from namecheap or godaddy pr any other provider. Usually the prices are similar or the same between them, but you might find some providers that offer a domain for free for a limited period of time.\n  Configure you domain to point to GitHub. In order to do this you need to add the following addresses as a records in your dns configuration.\n185.199.108.153 185.199.109.153 185.199.110.153 185.199.111.153    \nAdd a CNAME file inside your site the static folder. This will ensure that everytime you publish your changes, the CNAME will be published too.  cname file  Go to your public domain Settings -\u0026gt; Pages and add the custom domain there. After a couple of hours, the enforce HTTPS option will become available. Make sure to check that too.  settings page   And you should be done. Now you have your static site deployed on github that gets updated everytime you do a push on your private repo.\nIf you ran into any problems, don\u0026rsquo;t esitate to comment and I will try to help out 😉.\n Credits:\n post image RyanAncill - unsplash Hugo Documentation GitHub Actions How To add a Custom Domain On Github Pages   ","date":"2020-10-01T00:00:00Z","image":"https://images.unsplash.com/photo-1599420186946-7b6fb4e297f0?ixid=MnwxMjA3fDF8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8\u0026ixlib=rb-1.2.1\u0026auto=format\u0026fit=crop\u0026w=774\u0026q=80","permalink":"https://drgos.com/p/how-to-host-you-site-on-github-for-free/","title":"How to host you site on Github for free!"}]