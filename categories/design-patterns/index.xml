<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Design Patterns on DrGos</title><link>https://drgos.com/categories/design-patterns/</link><description>Recent content in Design Patterns on DrGos</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 06 Oct 2021 22:43:56 +0300</lastBuildDate><atom:link href="https://drgos.com/categories/design-patterns/index.xml" rel="self" type="application/rss+xml"/><item><title>Design Patterns Intro</title><link>https://drgos.com/p/design-patterns-intro/</link><pubDate>Wed, 06 Oct 2021 22:43:56 +0300</pubDate><guid>https://drgos.com/p/design-patterns-intro/</guid><description>There is an old saying, &amp;ldquo;If the only tool you have is a hammer, you will start treating all your problems like a nail.‚Äù
This quote dates back to 1964 and Abraham Kaplan, whose first wording was actually:
&amp;ldquo;Give a small boy a hammer and he will find that everything he encounters needs a pounding.&amp;rdquo;
I&amp;rsquo;ve noticed that in Software Engineering interviews there is a big accent on algorithms and data structures, but not on design patterns, at least not when you are starting out.</description></item></channel></rss>